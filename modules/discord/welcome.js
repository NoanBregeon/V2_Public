const logger = require('../utils/logger');
const templates = require('../utils/templates');

class WelcomeManager {
    constructor() {
        this.client = null;
        this.welcomeChannelId = null;
        this.defaultRoleId = null;
    }
    
    init(client) {
        this.client = client;
        this.welcomeChannelId = process.env.WELCOME_CHANNEL_ID;
        this.defaultRoleId = process.env.DEFAULT_ROLE_ID;
        
        if (!this.welcomeChannelId) {
            logger.warn('Canal de bienvenue non configur√© (WELCOME_CHANNEL_ID)');
        }
        
        logger.success('üëã Syst√®me de bienvenue initialis√©');
    }
    
    async handleNewMember(member) {
        try {
            // Envoyer le message de bienvenue
            await this.sendWelcomeMessage(member);
            
            // Ajouter le r√¥le par d√©faut
            await this.assignDefaultRole(member);
            
            logger.success(`üëã Nouveau membre accueilli: ${member.displayName}`);
            
        } catch (error) {
            logger.error('Erreur gestion nouveau membre:', error);
        }
    }
    
    async sendWelcomeMessage(member) {
        if (!this.welcomeChannelId) return;
        
        try {
            const channel = this.client.channels.cache.get(this.welcomeChannelId);
            if (!channel) {
                logger.warn(`Canal de bienvenue non trouv√©: ${this.welcomeChannelId}`);
                return;
            }
            
            const embed = templates.getWelcomeMessage(member, member.guild);
            
            await channel.send({
                content: `üëã ${member}`,
                embeds: [embed]
            });
            
            logger.info(`Message de bienvenue envoy√© pour ${member.displayName}`);
            
        } catch (error) {
            logger.error('Erreur envoi message de bienvenue:', error);
        }
    }
    
    async assignDefaultRole(member) {
        if (!this.defaultRoleId) return;
        
        try {
            const role = member.guild.roles.cache.get(this.defaultRoleId);
            if (!role) {
                logger.warn(`R√¥le par d√©faut non trouv√©: ${this.defaultRoleId}`);
                return;
            }
            
            await member.roles.add(role, 'R√¥le automatique nouveau membre');
            logger.info(`R√¥le "${role.name}" ajout√© √† ${member.displayName}`);
            
        } catch (error) {
            logger.error('Erreur attribution r√¥le par d√©faut:', error);
        }
    }
    
    // Statistiques
    getStats() {
        return {
            welcomeChannel: this.welcomeChannelId ? 'Configur√©' : 'Non configur√©',
            defaultRole: this.defaultRoleId ? 'Configur√©' : 'Non configur√©'
        };
    }
}

module.exports = new WelcomeManager();